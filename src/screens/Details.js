import { Dimensions, Image, ScrollView, StyleSheet, Text, View } from 'react-native'
import React, { useEffect, useState } from 'react'
import TitleBar from '../components/TitleBar'
import { LineChart } from 'react-native-chart-kit'
import TimeSeries5min from '../assets/TimeSeries5min'

// Text.defaultProps.style = { color: 'black' };


const Details = ({navigation, route}) => {


    const [stockDates, setStockDates] = useState([])
    const [closingVals, setClosingVals] = useState([]);
    const [chartData, setChartData] = useState({})

    const data = {
        "Symbol": "IBM",
        "AssetType": "Common Stock",
        "Name": "International Business Machines",
        "Description": "International Business Machines Corporation (IBM) is an American multinational technology company headquartered in Armonk, New York, with operations in over 170 countries. The company began in 1911, founded in Endicott, New York, as the Computing-Tabulating-Recording Company (CTR) and was renamed International Business Machines in 1924. IBM is incorporated in New York. IBM produces and sells computer hardware, middleware and software, and provides hosting and consulting services in areas ranging from mainframe computers to nanotechnology. IBM is also a major research organization, holding the record for most annual U.S. patents generated by a business (as of 2020) for 28 consecutive years. Inventions by IBM include the automated teller machine (ATM), the floppy disk, the hard disk drive, the magnetic stripe card, the relational database, the SQL programming language, the UPC barcode, and dynamic random-access memory (DRAM). The IBM mainframe, exemplified by the System/360, was the dominant computing platform during the 1960s and 1970s.",
        "CIK": "51143",
        "Exchange": "NYSE",
        "Currency": "USD",
        "Country": "USA",
        "Sector": "TECHNOLOGY",
        "Industry": "COMPUTER & OFFICE EQUIPMENT",
        "Address": "1 NEW ORCHARD ROAD, ARMONK, NY, US",
        "FiscalYearEnd": "December",
        "LatestQuarter": "2024-03-31",
        "MarketCapitalization": "156943335000",
        "EBITDA": "14380000000",
        "PERatio": "19.37",
        "PEGRatio": "4.2",
        "BookValue": "25.32",
        "DividendPerShare": "6.64",
        "DividendYield": "0.0391",
        "EPS": "8.82",
        "RevenuePerShareTTM": "67.94",
        "ProfitMargin": "0.132",
        "OperatingMarginTTM": "0.102",
        "ReturnOnAssetsTTM": "0.0458",
        "ReturnOnEquityTTM": "0.362",
        "RevenueTTM": "62068998000",
        "GrossProfitTTM": "32688000000",
        "DilutedEPSTTM": "8.82",
        "QuarterlyEarningsGrowthYOY": "0.701",
        "QuarterlyRevenueGrowthYOY": "0.015",
        "AnalystTargetPrice": "181.05",
        "AnalystRatingStrongBuy": "4",
        "AnalystRatingBuy": "5",
        "AnalystRatingHold": "9",
        "AnalystRatingSell": "3",
        "AnalystRatingStrongSell": "0",
        "TrailingPE": "19.37",
        "ForwardPE": "18.12",
        "PriceToSalesRatioTTM": "2.701",
        "PriceToBookRatio": "7.42",
        "EVToRevenue": "3.453",
        "EVToEBITDA": "14.54",
        "Beta": "0.718",
        "52WeekHigh": "197.22",
        "52WeekLow": "126.18",
        "50DayMovingAverage": "170.57",
        "200DayMovingAverage": "167.29",
        "SharesOutstanding": "918603000",
        "DividendDate": "2024-06-10",
        "ExDividendDate": "2024-05-09"
    }
    const tempChartData = {
        labels: ["January", "February", "March", "April", "May", "June"],
        // labels: tempKey,
        datasets: [
          {
            data: [1,3,2,6,3,5],
            // data: closingVals,
            color: (opacity = 1) => `rgba(134, 65, 244, ${opacity})`, 
            strokeWidth: 2 
          }
        ],
        // legend: ["Rainy Days"] 
      };
    
    const uri = `https://picsum.photos/200`
    const screenWidth = Dimensions.get('window').width

    
    const timeSeries = TimeSeries5min[`Time Series (5min)`]
    const tempKey = Object.keys(timeSeries)
    const checkValues = ()=>{
        try{
            let tempVals = []
            console.log("tempKey.length",tempKey[0].split(" ")[1]);
            let stockKeys = []
            tempKey.forEach((ele)=>{
                stockKeys.push(ele.split(" ")[1]);
            })
            // setStockDates(tempKey)
            setStockDates(stockKeys)

            tempKey.forEach(key => {

                // console.log(`Timestamp: ${key}`);
                // console.log(`1. open: ${timeSeries[key]["1. open"]}`);
                // console.log(`2. high: ${timeSeries[key]["2. high"]}`);
                // console.log(`3. low: ${timeSeries[key]["3. low"]}`);
                // console.log(`5. volume: ${timeSeries[key]["5. volume"]}`);
                // console.log('');

                // console.log(`4. close: ${timeSeries[key]["4. close"]}`);
                const closeVal = timeSeries[key]["4. close"]
                tempVals.push(closeVal)
            });
            setClosingVals(tempVals)
        }catch(e){
            console.error("Error checkValues", e);
        }
    }
    
    const [stock, setStock] = useState({})


    useEffect(()=>{
        setStock(data)
        // setChartData(tempChartData)
        checkValues()
    },[])
    useEffect(()=>{
        console.log("stockDates ", stockDates);
        console.log("closingVals ", closingVals);
        // if(stockDates.length > 0 && closingVals.length>0){
            const tempChartData = {
                labels: stockDates,
                // labels: tempKey,
                datasets: [
                  {
                    data: closingVals,
                    // data: closingVals,
                    color: (opacity = 1) => `rgba(134, 65, 244, ${opacity})`, 
                    strokeWidth: 2 
                  }
                ],
                // legend: ["Rainy Days"] 
              };
              setChartData(tempChartData)
        // }


    },[stockDates, closingVals])

    const stockParams = [
        { id: 1, name: "Market Cap", value: `$${(stock?.MarketCapitalization/1e10).toFixed(2)}T`},
        { id: 2, name: "P/E Ratio", value: stock?.PERatio},
        { id: 3, name: "Beta", value: stock?.Beta},
        { id: 4, name: "Dividend Yield", value: stock?.DividendYield+"%"},
        { id: 5, name: "Profit Margin", value: stock?.ProfitMargin},
    ]

    
    const chartConfig = {
        backgroundGradientFrom: "#FFFFFF",
        // backgroundGradientFromOpacity: 0,
        backgroundGradientTo: "#FFFFFF",
        // backgroundGradientToOpacity: 0.5,
        color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,
        strokeWidth: 2,
        barPercentage: 0.5,
        useShadowColorFromDataset: false 
    };
    
    // try{
        
        return (
            <ScrollView>
                <TitleBar navigation={navigation} screen="Details Screen"/>
    
                <View style={{flexDirection: "row", justifyContent: "space-between", paddingRight: 10}}>
                    <View style={{flexDirection: "row"}}>
                        <Image source={{uri : uri}} style={styles.image}/>
                        <View>
                            <Text style={{color: "black"}}>{stock?.Name}</Text>
                            <View style={{flexDirection: "row"}}>
                                <Text style={{color: "black"}}>{stock?.Symbol}, </Text>
                                <Text style={{color: "black"}}>{stock?.AssetType}</Text>
                            </View>
                            <Text style={{color: "black"}}>{stock?.Exchange}</Text>
                        </View>
                    </View>
                    <View>
                        <Text style={{color: "black"}}>  Curr val</Text>
                        <Text style={{color: "black"}}>  Prof</Text>
                    </View>
    
                </View>
    
                {/* Chart */}
                <LineChart
                    data={ tempChartData}
                    // data={ chartData}
                    width={screenWidth}
                    height={220}
                    withDots={false}
                    xLabelsOffset={10}
                    chartConfig={chartConfig}
                />
    
                <View style={{marginVertical: 10, width: "98%", alignSelf: "center", borderWidth: 2, borderColor: "lightgray", padding: 10}}>
                    <Text style={{color: "black", paddingBottom: 10, borderBottomWidth: 1}}>  About {stock?.Name}</Text>
                    <Text style={{marginVertical: 6, color: "black", textAlign: "justify"}}>{stock?.Description}</Text>
                    <View style={{flexDirection: "row", flexWrap : 'wrap'}}>
                        <View style={{marginVertical: 4, paddingVertical: 4, paddingHorizontal: 10, borderRadius: 30, backgroundColor: ""}}>
                            <Text>Industry : {stock?.Industry}</Text>
                        </View>
                        <View style={{marginVertical: 4, paddingVertical: 4, paddingHorizontal: 10, borderRadius: 30, backgroundColor: ""}}>
                            <Text>Sector : {stock?.Sector}</Text>
                        </View>
                    </View>
                    <View  style={{flexDirection: "row", justifyContent: "space-around"}}>
                        {
                            stockParams?.map((ele)=>{
                                return (
                                    <View key={ele?.id}>
                                        <Text style={{color: "black"}}>{ele?.name}</Text>
                                        <Text style={{fontWeight: "600", color: "black"}}>{ele?.value}</Text>
                                    </View>
    
                                )
                            })
                        }
                    </View>
                </View>
            </ScrollView>
        )
    // }catch(e){
    //     return(
    //         navigation.navigate("Error")
    //     )
    // }
}

export default Details

const styles = StyleSheet.create({
    image: {
        width: 60,
        height: 60,
        borderColor: 'lightgray',
        borderWidth: 2,
        borderRadius: 30,
        marginHorizontal: 6
      },
})